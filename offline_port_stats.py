# Calculates per port stats
'''
Expected format:
#### First sample for Switch 0 port 0:

txPkts                 0
txBytes                0
txMcastPkts            0
txMcastBytes           0
txBcastPkts            20
'''

import re
import pandas as pd
import argparse



def validate_arguments():
    parser = argparse.ArgumentParser(description="Calculates per port stats")
    # The first argument, filename, is a positional argument (required).
    parser.add_argument("filename", help="ens port stats file to parse", default="ens-port-stats.txt")

    args = parser.parse_args()
    return args


#### MAIN
args = validate_arguments()
FILENAME = args.filename

# Open the file containing the text
agg_df = pd.DataFrame()
switch_port_data = {}

with open(FILENAME, "r") as file:
    # Read the contents of the file


    text = file.read()
    # Need to split this into multiple entries split at:
    # Split into two samples before / after the wait
    samples= re.split("######################## Waiting \d+ seconds ########################", text)
    #agg_df = pd.DataFrame()


    for index, sample in enumerate(samples):
        print("Sample "+ str(index))
        #json_entries = re.split("#### [First|Second] sample for Switch \d+ lcore \d+:", sample)

        # Splitting on each port
        port_samples = re.split("####", sample)




        # Loop through each entry. Which are stats for each port
        for port_sample in port_samples:
            # Skip empty entries
            if not port_sample.strip(): # Skip empty lines
                continue
            #print(port_sample)

            lines = port_sample.strip().split( "\n" )  # Split sample into lines
            port_info = lines[0].strip().split()  # Extract port information for first line that looks like : Second sample for Switch 0 port 21:
            switch = port_info[4]  # Extract switch number
            port = port_info[6]  # Extract port number
            port_data = {}  # Dictionary to store port data
            port_data['Sample']=index
            port_data['Port']=port

            for line in lines[1:]:
                if not line.strip():
                    continue # Skip empty lines
                key, value = line.strip().split()
                port_data[key] = int( value )

            # Putting to dictionary we just created in a dataframe (easier structure to use later)
            # Created data frame has a single colum with an autogenerated index
            df_port_data=pd.DataFrame.from_dict(port_data, orient='index')
            # Using temporary df to transpose data so now data is on one row with multiple colums indexed by sample and port
            temp_df = df_port_data.T
            temp_df.set_index(['Sample','Port'], inplace=True)

            # Create a DF with the difference between previous and current
            agg_df = pd.concat( [agg_df, temp_df] )


            #print("Port:" + port)
            #print(port_data)

    diff_df = agg_df.groupby( 'Port' ).diff()
    # this gets only the final sample
    diff_df = diff_df.loc[diff_df.index.get_level_values( 'Sample' ).max()]

    import os
    filename_without_extension, file_extension = os.path.splitext( FILENAME )

    # Dumping to a csv file
    #print( f"Results saved to {filename_without_extension}.csv" )
    #non_zero_df.to_csv( filename_without_extension + ".csv", index=True )

    # Dunping to an excel file

    print( f"Results saved to {filename_without_extension}.xlsx" )

    diff_df.to_excel( filename_without_extension + ".xlsx" )
